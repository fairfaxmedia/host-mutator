apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "host-mutator.fullname" . }}
  labels:
    {{- include "host-mutator.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "host-mutator.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "host-mutator.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "host-mutator.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      initContainers:
      - name: {{ .Chart.Name }}-certificates
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        env:
          - name: ACTION
            value: certificates
          - name: MUTATE_CONFIG
            value: {{ .Chart.Name }}
          - name: WEBHOOK_SERVICE
            value: {{ include "host-mutator.fullname" . }}
          - name: WEBHOOK_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
        volumeMounts:
          - name: tls
            mountPath: /etc/webhook/certs
        resources:
          {{- toYaml .Values.resources | nindent 12 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
          - name: SOURCE_DOMAINS
            value: {{ .Values.config.sourceDomains }}
          - name: TARGET_DOMAIN
            value: {{ .Values.config.targetDomain }}
          - name: SSL_CERT_PATH
            value: /root/tls/tls.crt
          - name: SSL_KEY_PATH
            value: /root/tls/tls.key
          ports:
          - name: http
            containerPort: 8443
            protocol: TCP
          livenessProbe:
            httpGet:
              path: /health
              port: 8443
              scheme: HTTPS
          readinessProbe:
            httpGet:
              path: /health
              port: 8443
              scheme: HTTPS
          volumeMounts:
          - name: tls
            mountPath: /root/tls
            readOnly: true
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      hostNetwork: {{ .Values.config.hostNetwork }}
      volumes:
      - name: tls
        emptyDir: {}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
